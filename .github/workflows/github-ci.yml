name: Application CI

on: 
  push: 
    branches :
      - '**/feature/*'
      - 'develop'
      - 'master'
  pull_request:
     branches :
      - 'develop'
      - 'master'    
jobs:
    job_build_test:
        name: build test backend && frontend ok
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
        timeout-minutes: 40
        env:
            NODE_VERSION: 12.16.1
            SPRING_OUTPUT_ANSI_ENABLED: DETECT
            SPRING_JPA_SHOW_SQL: false
            JHI_DISABLE_WEBPACK_LOGS: true
            NG_CLI_ANALYTICS: false
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 12.16.1
            - uses: actions/setup-java@v1
              with:
                  java-version: 11
            - name: Install node.js packages
              run: npm install
            - name: Run backend test
              run: mvn -ntp clean verify -P-webpack
            - name: Run frontend test
              run: npm run test

    
    job_code_quality:
      name: Analyze code with SonarQube
      #needs: job_build_test
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 11
        - uses: actions/setup-node@v1
          with:
            node-version: 12.16.1
        - name: Install node.js packages
          run: npm install
        - name: Run backend test
          run: mvn -ntp clean verify -P-webpack
        - name: Run frontend test
          run: npm run test

        - name: Analyze code with SonarQube
          #continue-on-error: true
          env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          run: |
               if [ -n $SONAR_TOKEN ]; 
               then
                 mvn -ntp initialize sonar:sonar -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.organization=${{ secrets.SONAR_ORGANISATION }} -Dsonar.host.url=${{ secrets.SONAR_URL }}     
                else
                  echo No SONAR_TOKEN, skipping...
                fi

    job5_release:
      name: publish release to jfrog
      needs: job_code_quality
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2 # The checkout step downloads a copy of your repository on the runner.
        - uses: actions/setup-java@v1
          with:
            java-version: 11
            architecture: x64
        - uses: actions/setup-node@v1
          with:
            node-version: 12.16.1
        - name: publish release artifact to jfrog artifactory
          continue-on-error: true
          env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
              mvn -ntp release:prepare release:perform -DskipTests
    
      
    #https://github.com/marketplace/actions/deploy-to-heroku  
    jobdeploy:
      name: Deploy to Herroku
      #needs: pipeline
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - uses: akhileshns/heroku-deploy@v3.6.8 # This is the action
          with:
            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            heroku_app_name: ${{secrets.HEROKU_APP_NAME}} #Must be unique in Heroku
            heroku_email: ${{secrets.HEROKU_EMAIL}}
            branch: "master"
            team: ${{secrets.HEROKU_REPO_TEAM}} 
            buildpack: ${{secrets.HEROKU_BUILD_PACK}}
            
    job_publish_artifact:
      name: Publish artefac to github #publish to github package
      #needs: job_build_test
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 11
        - name: Publish package
          run: mvn -ntp package deploy -Pprod -DskipTests #mvn --batch-mode deploy
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    

    job_publish_dockerhub:
      name: publish to docker hub
      #needs: job_publish_artifact
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 11

        - name: Run backend test
          run: mvn -ntp clean package -P-webpack
        
        - name: Build and publish docker image
          continue-on-error: true
          if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/'))
          run: |
                GIT_TAG=:${GITHUB_REF#refs/tags/}
                DOCKER_TAG=${GIT_TAG#:refs/heads/master}
                mvn -ntp jib:build -Djib.to.image="${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_INSTANCE_NAME }}${DOCKER_TAG}" -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}"



    





